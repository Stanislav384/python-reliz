import pygame
import math
import random # Імпортуємо модуль random для випадкових чисел

pygame.init()
pygame.mixer.init()

# налаштування вікна
WIDTH, HEIGHT = 1280, 720
pygame.display.set_caption("Clicker Game") # Змінив назву вікна для кращого розуміння
screen = pygame.display.set_mode((WIDTH, HEIGHT))
#фон
background = pygame.image.load("background.png")
background = pygame.transform.scale(background, (WIDTH,HEIGHT))

clock = pygame.time.Clock()

# --- Клас GameObject (базовий клас для гравця, ворогів та інших об'єктів) ---
class GameObject():
    def __init__(self, filename, x=0, y=0, width=10, height=10):
        self.original_image = pygame.image.load(filename)
        self.original_image = pygame.transform.scale(self.original_image, (width, height))
        self.image = self.original_image
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y
        self.facing_right = True

    def draw(self):
        screen.blit(self.image, self.rect)

    def move(self, dx, dy):
        self.rect.x += dx
        self.rect.y += dy
        if dx > 0 and not self.facing_right:
            self.image = pygame.transform.flip(self.original_image, False, False)
            self.facing_right = True
        elif dx < 0 and self.facing_right:
            self.image = pygame.transform.flip(self.original_image, True, False)
            self.facing_right = False

# --- Клас Bullet (Куля) ---
class Bullet(GameObject):
    def __init__(self, filename, x, y, target_x, target_y, speed, width=20, height=10):
        super().__init__(filename, x, y, width, height)
        self.speed = speed

        dx, dy = target_x - x, target_y - y
        distance = math.sqrt(dx**2 + dy**2)

        if distance == 0:
            self.direction_x = 0
            self.direction_y = 0
        else:
            self.direction_x = dx / distance
            self.direction_y = dy / distance

        self.angle = math.degrees(math.atan2(-self.direction_y, self.direction_x))
        self.image = pygame.transform.rotate(self.original_image, self.angle)
        self.rect = self.image.get_rect(center=(x, y))

    def update(self):
        self.rect.x += self.direction_x * self.speed
        self.rect.y += self.direction_y * self.speed

# --- Клас Enemy (Ворог) ---
class Enemy(GameObject):
    def __init__(self, filename, x, y, width=50, height=50):
        super().__init__(filename, x, y, width, height)
        self.health = 1 # Вороги мають "здоров'я", щоб їх можна було знищити

    def hit(self):
        self.health -= 1
        return self.health <= 0 # Повертаємо True, якщо ворог знищений

# --- Налаштування гравця ---
player1 = GameObject("player.png", 0, 330, 100, 70)
player1_forward_x = 0
player1_forward_y = 0

# Список для зберігання всіх активних куль на екрані
bullets = []
bullet_speed = 15 # Збільшив швидкість кулі для кращої динаміки

# Список для зберігання всіх ворогів
enemies = []
# Таймер для появи ворогів (в мілісекундах)
ENEMY_SPAWN_EVENT = pygame.USEREVENT + 1
pygame.time.set_timer(ENEMY_SPAWN_EVENT, 2000) # Новий ворог з'являється кожні 2 секунди

# --- Основний ігровий цикл ---
running = True # Змінив "start" на "running" для кращої семантики
score = 0 # Додав змінну для підрахунку очок

while running:
    screen.blit(background, (0,0))
    player1.draw()

    # Обробка подій
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_d:
                player1_forward_x = 5
            elif event.key == pygame.K_a:
                player1_forward_x = -5
            elif event.key == pygame.K_w:
                player1_forward_y = -5
            elif event.key == pygame.K_s:
                player1_forward_y = 5

        elif event.type == pygame.KEYUP:
            if event.key in (pygame.K_d, pygame.K_a):
                player1_forward_x = 0
            if event.key in (pygame.K_w, pygame.K_s):
                player1_forward_y = 0

        elif event.type == pygame.MOUSEBUTTONDOWN:
            if event.button == 1:
                mouse_x, mouse_y = event.pos
                new_bullet = Bullet("bullet.png", player1.rect.centerx, player1.rect.centery,
                                     mouse_x, mouse_y, bullet_speed, width=20, height=10)
                bullets.append(new_bullet)

        elif event.type == ENEMY_SPAWN_EVENT:
            # Створюємо нового ворога у випадковій позиції по осі Y
            # Ворог з'являється з правого краю екрану
            enemy_y = random.randint(0, HEIGHT - 50) # -50, щоб ворог не виходив за нижній край
            new_enemy = Enemy("enemy.png", WIDTH, enemy_y, 50, 50) # Переконайтеся, що файл enemy.png є
            enemies.append(new_enemy)

    # Оновлення та відображення куль
    for bullet in list(bullets):
        bullet.update()
        bullet.draw()
        if not screen.get_rect().colliderect(bullet.rect):
            bullets.remove(bullet)

        # Перевірка колізій кулі з ворогами
        for enemy in list(enemies): # Ітеруємо по копії списку ворогів
            if bullet.rect.colliderect(enemy.rect):
                if enemy.hit(): # Якщо ворог знищений
                    enemies.remove(enemy)
                    score += 100 # Додаємо очки за знищеного ворога
                bullets.remove(bullet) # Видаляємо кулю після влучання
                break # Куля може влучити тільки в одного ворога за раз

    # Оновлення та відображення ворогів (рух ворогів)
    for enemy in list(enemies):
        # Вороги рухаються зправа наліво
        enemy.move(-2, 0) # Змінив швидкість ворогів на -2
        enemy.draw()
        # Видаляємо ворогів, які вийшли за лівий край екрану
        if enemy.rect.x < -enemy.rect.width:
            enemies.remove(enemy)

    player1.move(player1_forward_x, player1_forward_y)

    # Обмеження гравця в межах екрану
    player1.rect.left = max(0, player1.rect.left)
    player1.rect.right = min(WIDTH, player1.rect.right)
    player1.rect.top = max(0, player1.rect.top)
    player1.rect.bottom = min(HEIGHT, player1.rect.bottom)


    # Відображення рахунку
    font = pygame.font.Font(None, 36) # Створюємо об'єкт шрифту
    text = font.render(f"Score: {score}", True, (255, 255, 255)) # Створюємо поверхню з текстом (білий колір)
    screen.blit(text, (10, 10)) # Відображаємо текст у верхньому лівому куті

    clock.tick(60)
    pygame.display.flip()

pygame.quit()
