import pygame
import random
pygame.init()

pygame.display.set_caption("First Game")
WIDTH, HEIGHT = 1280, 720
screen = pygame.display.set_mode((WIDTH, HEIGHT))

background = pygame.image.load("background.png")
background = pygame.transform.scale(background, (WIDTH, HEIGHT))

clock = pygame.time.Clock()

class GameObject():
    def __init__(self, filename, x=0, y=0, width=10, height=10):
        self.image_right = pygame.image.load(filename)
        self.image_right = pygame.transform.scale(self.image_right, (width, height))
        self.image_left = pygame.transform.flip(self.image_right, True, False)
        self.image = self.image_right
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y
        self.facing_right = True
        self.velocity_y = 0 
        self.isJumping = False 

    def draw(self):
        screen.blit(self.image, self.rect)

    def move(self, dx):
        self.rect.x += dx
        if dx > 0:
            self.image = self.image_right
            self.facing_right = True
        if dx < 0:
            self.image = self.image_left
            self.facing_right = False

    def apply_gravity(self):
        self.velocity_y += GRAVITY 
        self.rect.y += self.velocity_y

        if self.rect.y >= GROUND_Y:
            self.rect.y = GROUND_Y
            self.velocity_y = 0
            self.isJumping = False
    
    def jump(self):
        if not self.isJumping:
            self.velocity_y = JUMP_POWER
            self.isJumping = True 

class Coin():
    def __init__(self, x, y):
        self.image = pygame.image.load("coin.png")
        self.image = pygame.transform.scale(self.image, (40, 40))
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y
        self.velocity_y = 0
        self.falling = False
        self.timer = random.randint(1000, 5000)  # Випадковий час старту падіння (1-5 секунд)
        self.start_time = pygame.time.get_ticks()

    def draw(self):
        screen.blit(self.image, self.rect)

    def update(self):
        current_time = pygame.time.get_ticks()
        if not self.falling and current_time - self.start_time >= self.timer:
            self.falling = True  # Почати падіння

        if self.falling:
            self.velocity_y += GRAVITY
            self.rect.y += self.velocity_y

    def has_hit_ground(self):
        return self.rect.y >= GROUND_Y

def spawn_coin():
    x = random.randint(0, WIDTH - 40)
    y = random.randint(0, 100)
    return Coin(x, y)

player_x = 0
player_y = 330
player_forward = 0

GRAVITY = 1
JUMP_POWER = -20
GROUND_Y = 500

player = GameObject("player.png", player_x, player_y, 300, 230)

# Початкова кількість монет
NUMBER_OF_COINS = 5
coins = []

for _ in range(NUMBER_OF_COINS):
    coins.append(spawn_coin())

start = True
while start:
    screen.blit(background, (0, 0))
    player.draw()

    for coin in coins:
        coin.draw()
        coin.update()

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            start = False

        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_d:
                player_forward = 5
            elif event.key == pygame.K_a:
                player_forward = -5
            elif event.key == pygame.K_SPACE:
                player.jump()

        elif event.type == pygame.KEYUP:
            if event.key in (pygame.K_d, pygame.K_a):
                player_forward = 0

    player.apply_gravity()
    player.move(player_forward)

    # Перевірка на зіткнення монет з гравцем або землею
    coins_to_remove = []
    for coin in coins:
        if player.rect.colliderect(coin.rect):
            print("Hello world")
            coins_to_remove.append(coin)
        elif coin.has_hit_ground():
            coins_to_remove.append(coin)

    # Видалити монетки і замінити їх на нові
    for coin in coins_to_remove:
        coins.remove(coin)
        coins.append(spawn_coin())

    pygame.display.flip()
    clock.tick(100)

pygame.quit()
